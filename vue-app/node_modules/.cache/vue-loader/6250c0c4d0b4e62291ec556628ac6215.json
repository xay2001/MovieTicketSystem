{"remainingRequest":"/Users/xay/MovieTicketSystem/vue-app/node_modules/vue-loader/lib/loaders/templateLoader.js??ref--5!/Users/xay/MovieTicketSystem/vue-app/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/xay/MovieTicketSystem/vue-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/xay/MovieTicketSystem/vue-app/src/views/me/Order.vue?vue&type=template&id=689c4291&scoped=true&","dependencies":[{"path":"/Users/xay/MovieTicketSystem/vue-app/src/views/me/Order.vue","mtime":1681478951866},{"path":"/Users/xay/MovieTicketSystem/vue-app/node_modules/cache-loader/dist/cjs.js","mtime":1681457359149},{"path":"/Users/xay/MovieTicketSystem/vue-app/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1681457361008},{"path":"/Users/xay/MovieTicketSystem/vue-app/node_modules/cache-loader/dist/cjs.js","mtime":1681457359149},{"path":"/Users/xay/MovieTicketSystem/vue-app/node_modules/vue-loader/lib/index.js","mtime":1681457360544}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}